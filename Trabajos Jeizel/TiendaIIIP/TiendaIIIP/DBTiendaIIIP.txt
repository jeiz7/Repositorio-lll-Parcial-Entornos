create database TiendaIIIP
go

use TiendaIIIP
go


create table usuario (
	idUsuario int primary key not null,
	nombre varchar(25) not null,
	apellido varchar(25) not null,
	nombreUsuario varchar(25) not null,
	psw varchar(40) not null,
	rol char(15) not null,
	estado char(20) not null
)

alter table usuario add correo varchar(45) 


select * from usuario


---------------PROCEDIMIENTOS ALMACENADOS, STORE PROCEDURE CRUD----------------

alter procedure insertarUsuario 
	@idUsuario int, @nombre varchar(25),
	@apellido varchar(25), @userName varchar(25),
	@psw varchar(25), @rol char(15), @estado char(20), 
	@correo varchar(50)
	as begin
		if exists (select nombreUsuario from usuario where nombreUsuario=@userName and estado='activo')
		raiserror ('Ya existe un registro con ese usuario, porfavor ingrese uno nuevo',16,1)
		else
		insert into usuario values(@idUsuario, @nombre, @apellido, @userName,@psw, @rol, @estado, @correo) 
	end

execute insertarUsuario 3, 'Olman', 'Mendez', 'olmanmendez', '123','admin','activo', 'olmmendez@unicah.edu'
execute insertarUsuario 4, 'Luis', 'Lopez', 'llopez', '123','cajero','activo', 'luislopez@unicah.edu'


----------------------------UPDATE--------------------------------------
alter procedure modificarUsuario 
	@idUsuario int, @nombre varchar(25), 
	@apellido varchar(25), @userName varchar(25), 
	@psw varchar(25), @rol char(15), @correo varchar(50)
	as begin 
		if exists(select nombreUsuario,idUsuario from usuario where 
					(nombreUsuario = @userName and idUsuario <> @idUsuario and estado = 'activo') or 
					(nombre=@nombre and idUsuario <> @idUsuario and estado= 'activo'))
		raiserror ('Usuario esta en uso, utiliza otro por favor', 16,1)
		else
		update usuario set nombre = @nombre, apellido =@apellido, psw = @psw, rol = @rol, correo = @correo
		where idUsuario = @idUsuario
	end

	------------------DELETE----------
	create procedure eliminarUsuario 
	@idUsuario int, @rol varchar(50)
	as begin 
		if exists (select nombreUsuario from usuario where @rol = 'admin')
			raiserror ('El usuario *Admin* no se puede eliminar, Accion denegada',16,1)
		else
			update usuario set estado = 'eliminado'
			where idUsuario = @idUsuario and rol <> 'admin'
	end

	select * from usuario

	-------Buscar usuario por nombre de usuario---

	create procedure buscarUsuario 
	@userName varchar(50)
	as begin
		select CONCAT(nombre, ' ', apellido) as 'Nombre completo', nombreUsuario as 'Usuario', 
				estado as 'Estado', rol as 'Puesto', correo as 'Correo' 
		from usuario
		where nombreUsuario like '%' +@userName+ '%'
	end

	execute buscarUsuario 'p'
	
	----------------PRODUCTO------------------
	------PRODUCTOS
Create table producto (
	idProducto int primary key not null,
	nombre varchar(50) null,
	stock int null,
	precioCompra numeric(15,2) null,
	precioVenta numeric(15,2) null,
	fechaVencimiento varchar(50) null,
	stockMinimo int null,
	impuesto numeric(10,2)
)
--Insertar/Guardar
create procedure insertarProducto
	@idProducto int, @nombre varchar(50), @stock int,
	@precioCompra numeric(15,2), @precioVenta numeric(15,2),
	@fechaVencimiento varchar(50),
	@stockMinimo int, @impuesto numeric(10,2)
	as begin
	if exists(select nombre, idProducto from producto where nombre = @nombre or idProducto = @idProducto)
		raiserror('Ya existe un producto con este Codigo/Nombre, por favor ingrese uno nuevo',16,1)
	else
	begin
		insert into producto values(@idProducto, @nombre,@stock,@precioCompra,
								@precioVenta,@fechaVencimiento,@stockMinimo,@impuesto)
	end
end

select * from producto

execute insertarProducto 1,'Pepsi',200,10.2,15,'20/09/2020',50,0.15

alter procedure buscarProducto
@idProducto as int
as begin
	select idProducto as 'Código', nombre as 'Nombre', stock as 'Cant. Disponible',
	precioCompra as 'Costo', precioVenta as 'Precio de Venta', fechaVencimiento as 'Fecha Venc.',
	stockMinimo as 'Stock minimo', impuesto as 'Impto' from producto where idProducto like @idProducto
end
execute buscarProducto 1

delete from producto where idProducto = 0

